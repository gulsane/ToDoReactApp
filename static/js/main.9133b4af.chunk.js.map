{"version":3,"sources":["AddToDoItem.js","ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["AddTodo","state","Id","Title","Status","handleId","event","setState","target","value","handleTitle","handleStatus","handleSubmition","preventDefault","props","onAdd","onSubmit","className","this","placeholder","onChange","type","Component","ToDoList","todos","addToDo","todo","filteredItem","filter","x","map","key","style","color","onClick","deleteToDo","icon","editTodo","library","add","faTrash","faPlus","faEdit","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9133b4af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nexport default class AddTodo extends Component {\r\n    state={\r\n        Id:\"\",\r\n        Title:\"\",\r\n        Status:\"Pending\"\r\n    }\r\n    \r\n    handleId = (event) => {\r\n        this.setState({Id:event.target.value});\r\n    };\r\n\r\n    handleTitle = (event)=>{\r\n        this.setState({Title:event.target.value});\r\n    };\r\n\r\n    handleStatus = (event) =>{\r\n        this.setState({Status:event.target.value});\r\n    };\r\n\r\n    handleSubmition = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAdd({\r\n            Id:this.state.Id,\r\n            Title:this.state.Title,\r\n            Status:this.state.Status\r\n        });\r\n        this.setState({\r\n            Id:\"\",\r\n            Title:\"\",\r\n            Status:\"Pending\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>\r\n                    Add ToDo\r\n                </h3>\r\n                <form onSubmit={(event)=>this.handleSubmition(event)}>\r\n                    <div className=\"form-group\" >\r\n                        <input value={this.state.Id} className=\"form-control\" placeholder=\"Enter Id\" onChange={this.handleId} />\r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                        <input value={this.state.Title} className=\"form-control\" placeholder=\"Enter Title\" onChange={this.handleTitle} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select value={this.state.Status} className=\"form-control\" onChange={this.handleStatus} >\r\n                            <option value=\"Done\" >Done</option>\r\n                            <option value=\"Pending\" >Pending</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"form-control btn btn-primary\" >Add Todo</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import {fontAwesomeIcon, FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport React,{Component} from \"react\";\r\nimport AddToDoItem from \"./AddToDoItem\"\r\n\r\n\r\nexport default class ToDoList extends Component {\r\n    state = {\r\n        todos:[\r\n            {Id:1,Title:\"push my code to github\",Status:\"Done\"},\r\n            {Id:2,Title:\"send email to senior manager\", Status:\"Pending\"}\r\n        ]\r\n    }\r\n    deleteToDo(todo){\r\n        const filteredItem = this.state.todos.filter(x => x.Id!==todo.Id);\r\n        this.setState({todos:filteredItem});\r\n    }\r\n    editTodo(todo){\r\n        this.setState(state=>{\r\n          return {todos:state.todos.map(x=>{\r\n            if(x.Id===todo.Id){\r\n                return {...x,Status:x.Status===\"Done\"?\"Pending\":\"Done\"}\r\n            } else {\r\n                return x;\r\n            }\r\n          })  \r\n        }\r\n    })\r\n    }\r\n    \r\n    addToDo = (todo) => {\r\n        this.setState({todos:[...this.state.todos,todo]});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <AddToDoItem onAdd={this.addToDo}></AddToDoItem>\r\n                <h1>My To-Do-List</h1>\r\n                <table className=\"table\">\r\n                   <thead>\r\n                     <tr>\r\n                        <th>Id</th>\r\n                        <th>Title</th>\r\n                        <th>Status</th>\r\n                        <th>Action</th>\r\n                     </tr>\r\n                   </thead>\r\n                   <tbody>\r\n                       {this.state.todos.map(x => {\r\n                         return (\r\n                              <tr key={x.Id}>\r\n                              <td>{x.Id}</td>\r\n                              <td>{x.Title}</td>\r\n                              <td style={{color:x.Status===\"Done\"?\"green\":\"red\"}}>{x.Status}</td>\r\n                              <td>\r\n                                 <button className=\"btn btn-primary\" onClick={()=>this.deleteToDo(x)}>\r\n                                     <span>\r\n                                         <FontAwesomeIcon icon = \"trash\"></FontAwesomeIcon>\r\n                                     </span>\r\n                                 </button>\r\n                                 <button className=\"btn btn-primary\" onClick={()=>this.editTodo(x)}>\r\n                                     <span>\r\n                                         <fontAwesomeIcon icon = \"edit\"></fontAwesomeIcon>\r\n                                     </span>\r\n                                 </button>\r\n                              </td>\r\n                              </tr>\r\n                          );\r\n                       })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import ToDoList from \"./ToDoList\";\nimport React from 'react';\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash, faPlus, faEdit } from \"@fortawesome/free-solid-svg-icons\"\nlibrary.add(faTrash,faPlus,faEdit);\n// import Demo from \"./components/demo\";\n// import Demo1 from \"./components/demo1\";\n// import Parent from \"./components/parent\";\n// import Sample from  \"./components/sample\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList></ToDoList>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}